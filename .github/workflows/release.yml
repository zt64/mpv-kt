name: Publish release
run-name: Publish release ${{ github.event.release.tag_name }}

on:
  workflow_dispatch:
  release:
    types: [ prereleased, released ]

jobs:
  publish:
    name: "Publish release"
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        include:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Test version
        id: version
        run: |
          version=$(cat build.gradle.kts | grep -E 'version = "' | cut -d \" -f 2)
          if git show-ref --tags --quiet --verify -- "refs/tags/$version" >/dev/null; then
            echo "Git tag $version already exists, failing to publish";
            exit 1
          else
            echo "::set-output name=release_tag::$version"
          fi

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ vars.JVM_DISTRIBUTION }}
          java-version: ${{ vars.JVM_VERSION }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Cache konan directory
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('**/build.gradle.kts') }}
          restore-keys: "${{ runner.os }}-konan-"

      - name: Build and Maven publish
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_IN_MEMORY_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_IN_MEMORY_KEY_PASSWORD }}
        run: ./gradlew publishAllPublicationsToMavenCentral --no-configuration-cache --stacktrace